name: Update PR Description Based on Commits

on:
  pull_request:
    types: [opened, synchronize, reopened]  # Trigger on PR creation, update, or reopen

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  update-pr-description:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Get PR Number and Commit Messages
      id: get_commits
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Set PR number directly or from secret if needed
        PR_NUMBER=${{ github.event.pull_request.number || env.PR_NUMBER }}
        echo "Retrieved PR Number: $PR_NUMBER"

        # Fetch commit messages for the PR using GitHub CLI
        commits=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].commit.message' | sed 's/^/- /')

        # Debugging output to show fetched commit messages
        echo "Fetched Commits:"
        echo "$commits"
        
        # Use multiline syntax for setting environment variables
        echo "commits<<EOF" >> $GITHUB_ENV
        echo "$commits" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "pr_number=$PR_NUMBER" >> $GITHUB_ENV

    - name: Update PR Description
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = process.env.pr_number;
          const commits = process.env.commits;
          
          const newDescription = `### Pull Request Summary:\n\n### Commits:\n${commits}\n\n---\n_Automatically generated summary._`;
          
          await github.rest.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber,
            body: newDescription
          });

    - name: Display Confirmation
      run: echo "Pull Request description updated successfully."
